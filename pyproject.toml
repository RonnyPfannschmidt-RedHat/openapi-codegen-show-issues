[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend="hatchling.build"

[project]
name = "openapi-example"
description = "showing some issues with openapi codegen v7 and its pydantic usage"
authors = [{name="Ronny Pfannschmidt", email="rpfannsc@redhat.com"}]

readme = {file="README.md", content-type="text/x-markdown"}
urls.Project = "https://github.com/RonnyPfannschmidt-RedHat/openapi-codegen-show-issues/"

requires-python = ">= 3.12"
dependencies = [
 "datamodel-code-generator",
"dateutils",
]

dynamic = ["version"]

[tool.mypy]
strict=true
python_version = "3.12"

[tool.ruff]
fix = true
[tool.ruff.lint]
extend-select = ["UP","F","E","W","ANN", "FA"]
ignore = ["ANN101", "ANN102"]
extend-safe-fixes = ["UP038", "UP008","UP030","UP031",]
[tool.ruff.lint.per-file-ignores]
"example/*" = ["ANN001", "ANN002", "ANN003", "ANN201", "ANN202","ANN204","ANN206","ANN401",  "E501" , "F841"]
"test_*.py" = ["ANN401"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.default]
python = "3.12"
dependencies = ["pytest", "schemathesis", "mypy>=1.10"]
scripts.generate = '''
   datamodel-codegen \
     --input=openapi/openapi.BrokenString.yaml \
     --input-file-type=openapi \
     --output=model_codegen_broken_string.py \
     --output-model-type=pydantic_v2.BaseModel

   datamodel-codegen \
     --input=openapi/openapi.ConfusedValues.yaml \
     --input-file-type=openapi \
     --output=model_codegen_condused_values.py \
     --output-model-type=pydantic_v2.BaseModel
'''
scripts.tsp = "npm run tsp-compile specs"
scripts.openapi = '''
  npm run openapi-compile -- \
    -i openapi/openapi.BrokenString.yaml\
    --package-name=oapi_codegen_condused_values

  npm run openapi-compile -- \
    -i openapi/openapi.ConfusedValues.yaml\
    --package-name=oapi_codegen_broken_string
'''
scripts.pre-commit = "env pre-commit run -a || env pre-commit run -a"
scripts.test = "pytest {args}"
scripts.refresh = ["tsp", "openapi", "generate", "pre-commit", "test"]